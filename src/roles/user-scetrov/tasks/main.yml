- name: Update Authorized Keys
  ansible.builtin.authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ item }}"
  loop:
    - "{{ ssh_hsm_key }}"
    - "{{ ssh_bastion_key }}"
  when:
    - ssh_hsm_key is defined
    - ssh_bastion_key is defined
  no_log: true

- name: Ensure .config/Yubico directory exists
  ansible.builtin.file:
    path: "/home/{{ username }}/.config/Yubico"
    state: directory
    mode: '0700'
    owner: "{{ username }}"
    group: "{{ user_group }}"

- name: Write U2F key to .config/Yubico
  ansible.builtin.copy:
    dest: "/home/{{ username }}/.config/Yubico/u2f_keys"
    content: "{{ u2f_key }}"
    mode: '0600'
    owner: "{{ username }}"
    group: "{{ user_group }}"
  when:
    - u2f_key is defined

- name: Ensure ~/.gnupg directory exists
  file:
    path: "/home/{{ username }}/.gnupg"
    state: directory
    mode: '0700'

- name: Add SSH support to gpg-agent.conf
  lineinfile:
    path: "/home/{{ username }}/.gnupg/gpg-agent.conf"
    line: "enable-ssh-support"
    create: yes
    mode: '0600'

- name: Enable GPG Agent
  lineinfile:
    path: "/home/{{ username }}/.gnupg/gpg.conf"
    line: "use-agent"
    create: yes
    mode: '0600'

- name: Enable SSH Control
  lineinfile:
    path: "/home/{{ username }}/.gnupg/sshcontrol"
    line: "{{ sshcontrol_key }}"
    create: yes
    mode: '0600'

- name: Deploy Syncthing Keys
  ansible.builtin.copy:
    src: "{{ role_path }}/files/{{ ansible_hostname }}/.config/syncthing/{{ item }}"
    dest: "/home/{{ username }}/.config/syncthing/{{ item }}"
    owner: "{{ username }}"
    group: "{{ user_group }}"
    mode: '0600'
  loop:
    - cert.pem
    - key.pem

- name: Ensure syncthing shared folders exist
  ansible.builtin.file:
    path: "/home/{{ username }}/Documents/{{ item}}"
    state: directory
    mode: '0700'
    owner: "{{ username }}"
    group: "{{ user_group }}"
  loop:
    - "passwords"
    - "shared"

- name: Create certificate signing request (CSR) for self-signed certificate for syncthing
  community.crypto.openssl_csr_pipe:
    privatekey_path: /home/{{ username }}/.config/syncthing/https-key.pem
    common_name: "scetrov.local"
    organization_name: Scetrov
    subject_alt_name:
      - "DNS:syncthing.scetrov.local"
  register: csr

- name: Create self-signed certificate from CSR
  community.crypto.x509_certificate:
    path: /home/{{ username }}/.config/syncthing/https-cert.pem
    csr_content: "{{ csr.csr }}"
    privatekey_path: /home/{{ username }}/.config/syncthing/https-key.pem
    provider: selfsigned

- name: Restart syncthing service
  become: true
  ansible.builtin.systemd:
    name: syncthing
    state: restarted

- name: Ensure .passwords folder
  ansible.builtin.file:
    path: "/home/{{ username }}/.passwords"
    state: directory
    mode: '0700'
    owner: "{{ username }}"
    group: "{{ user_group }}"

- name: Deploy Keepass Keyfiles
  ansible.builtin.copy:
    src: "{{ role_path }}/files/keepass/{{ item }}"
    dest: "/home/{{ username }}/.passwords/{{ item }}"
    owner: "{{ username }}"
    group: "{{ user_group }}"
    mode: '0600'
  loop:
    - NixOS.keyx

- name: Write VirusTotal API key to ~/.vt.toml
  copy:
    dest: "/home/{{ username }}/.vt.toml"
    content: |
      apikey="{{ vt_api_key }}"
    owner: "{{ username }}"
    group: "{{ user_group }}"
    mode: '0600'

- name: Ensure NetworkManager .certs folder exists
  ansible.builtin.file:
    path: "/home/{{ username }}/.cert/nm-openvpn"
    state: directory
    mode: '0700'
    owner: "{{ username }}"
    group: "{{ user_group }}"

- name: Copy NetworkManager .certs
  ansible.builtin.copy:
    src: "{{ role_path }}/files/NetworkManager/.cert/nm-openvpn/"
    dest: "/home/{{ username }}/.cert/nm-openvpn/"
    owner: "{{ username }}"
    group: "{{ user_group }}"
    mode: '0600'
